@page "/user/{id}"
@inject MovieApp.Application.Interfaces.IUserService UserService
@using MovieApp.Domain.Entities

<PageTitle>User Profile</PageTitle>

<h1>User Profile</h1>

@if (user == null)
{
    <p><em>Loading user data...</em></p>
}
else
{
    <div class="card mb-4">
        <div class="card-header">
            <h3>@user.UserName</h3>
        </div>
        <div class="card-body">
            <p><strong>Email:</strong> @user.Email</p>
            <p><strong>Registered:</strong> @user.RegisterDate.ToShortDateString()</p>
            @if (user.LastLogin.HasValue)
            {
                <p><strong>Last Login:</strong> @user.LastLogin.Value.ToShortDateString()</p>
            }
        </div>
    </div>

    <h3>Watchlist</h3>
    @if (user.WatchlistItems != null && user.WatchlistItems.Any())
    {
        <div class="row">
            @foreach (var item in user.WatchlistItems)
            {
                <div class="col-md-4 mb-3">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">@item.Movie.Title</h5>
                            <p class="card-text">Added on: @item.AddedAt.ToShortDateString()</p>
                            <a href="/movie/@item.MovieId" class="btn btn-primary">View Movie</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p>No movies in watchlist.</p>
    }

    <h3>Reviews</h3>
    @if (user.Reviews != null && user.Reviews.Any())
    {
        <div class="list-group mb-4">
            @foreach (var review in user.Reviews)
            {
                <div class="list-group-item">
                    <h5>@review.Movie.Title</h5>
                    <div class="d-flex justify-content-between">
                        <span>Rating: @review.Rating/10</span>
                        <small>@review.CreatedAt.ToShortDateString()</small>
                    </div>
                    <p>@review.Comment</p>
                </div>
            }
        </div>
    }
    else
    {
        <p>No reviews yet.</p>
    }
}

@code {
    [Parameter]
    public string Id { get; set; }

    private User user;

    protected override async Task OnInitializedAsync()
    {
        user = await UserService.GetUserByIdAsync(Id);
    }
}
